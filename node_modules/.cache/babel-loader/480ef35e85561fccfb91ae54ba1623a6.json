{"ast":null,"code":"var _jsxFileName = \"/home/michael/Documents/Development/code/phase2/project/FlatIron-Workout-Builder-Project/src/components/ExercisePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Route, Switch } from 'react-router';\nimport AddExercise from \"./AddExercise\";\nimport ExerciseList from \"./ExerciseList\";\nimport MyExercises from \"./MyExercises\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExercisePage() {\n  _s();\n\n  const [exercises, setExercises] = useState([]);\n  const [myExercises, setMyExercises] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    fetch(`https://exercisedb.p.rapidapi.com/exercises?rapidapi-key=77e7b80605msh242886ef2c7d7e8p1041adjsn30fa46c2ba04`).then(resp => resp.json()).then(data => setExercises(data));\n  }, []);\n\n  function handleAddExercise(exerciseToAdd) {\n    const myExerciseList = myExercises.find(exercise => exercise.id === exerciseToAdd.id);\n\n    if (!myExerciseList) {\n      setMyExercises([...myExercises, exerciseToAdd]);\n    }\n  }\n\n  function handleRemoveExercise(exerciseToRemove) {\n    setMyExercises(myExercises => myExercises.filter(exercise => exercise.id !== exerciseToRemove.id));\n  }\n\n  const displayedExercises = exercises.filter(exercise => {\n    return exercise.target.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  const handlePost = exercises => {\n    console.log(\"handlePost ran\");\n    console.log(\"exercises\", exercises);\n    fetch(\"http://localhost:6001/posts\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newExercise)\n    }).then(r => r.json()).then(data => setExercises([...exercises, data]));\n  };\n\n  console.log(myExercises);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/exercise/new/search/my-list\",\n        children: /*#__PURE__*/_jsxDEV(MyExercises, {\n          myExercises: myExercises,\n          onRemoveExercise: handleRemoveExercise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/exercise/new/search\",\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          searchTerm: searchTerm,\n          setSearchTerm: setSearchTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/exercise/new\",\n        children: /*#__PURE__*/_jsxDEV(AddExercise, {\n          handlePost: handlePost,\n          exercises: exercises\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/exercise\",\n        children: /*#__PURE__*/_jsxDEV(ExerciseList, {\n          exercises: displayedExercises,\n          onAddExercise: handleAddExercise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExercisePage, \"BHgH/kKpd5Z45fG+n/uIIO1Kh4A=\");\n\n_c = ExercisePage;\nexport default ExercisePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"sources":["/home/michael/Documents/Development/code/phase2/project/FlatIron-Workout-Builder-Project/src/components/ExercisePage.js"],"names":["useState","useEffect","Route","Switch","AddExercise","ExerciseList","MyExercises","Search","ExercisePage","exercises","setExercises","myExercises","setMyExercises","searchTerm","setSearchTerm","fetch","then","resp","json","data","handleAddExercise","exerciseToAdd","myExerciseList","find","exercise","id","handleRemoveExercise","exerciseToRemove","filter","displayedExercises","target","toLowerCase","includes","handlePost","console","log","method","headers","body","JSON","stringify","newExercise","r"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Route, Switch } from 'react-router';\n\nimport AddExercise from \"./AddExercise\"\nimport ExerciseList from \"./ExerciseList\";\nimport MyExercises from \"./MyExercises\";\nimport Search from \"./Search\";\n\n\n\n\nfunction ExercisePage() {\n\n  const [exercises, setExercises] = useState([])\n  const [myExercises, setMyExercises] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n\n  useEffect(() => {\n    fetch(`https://exercisedb.p.rapidapi.com/exercises?rapidapi-key=77e7b80605msh242886ef2c7d7e8p1041adjsn30fa46c2ba04`)\n      .then(resp => resp.json())\n      .then(data => setExercises(data));\n  }, [])\n\n\n  function handleAddExercise(exerciseToAdd) {\n    const myExerciseList = myExercises.find(\n      (exercise) => exercise.id === exerciseToAdd.id\n    );\n    if (!myExerciseList) {\n      setMyExercises([...myExercises, exerciseToAdd]);\n    }\n  }\n\n  function handleRemoveExercise(exerciseToRemove) {\n    setMyExercises((myExercises) =>\n      myExercises.filter((exercise) => exercise.id !== exerciseToRemove.id)\n    );\n  }\n\n  const displayedExercises = exercises.filter((exercise) => {\n    return exercise.target.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  const handlePost = (exercises) => {\n    console.log(\"handlePost ran\")\n    console.log(\"exercises\", exercises)\n    fetch(\"http://localhost:6001/posts\", { method: 'POST', \n    headers: { 'Content-Type': 'application/json' }, \n    body: JSON.stringify(newExercise) }) \n    .then(r => r.json()) .then(data => setExercises([...exercises, data])) \n  }\n\n  console.log(myExercises);\n\n  return (\n    <main>\n      <Switch>\n        <Route path=\"/exercise/new/search/my-list\">\n         <MyExercises\n          myExercises={myExercises}\n          onRemoveExercise={handleRemoveExercise} />\n          </Route>\n        <Route path=\"/exercise/new/search\">\n          <Search\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm} />\n        </Route>\n        <Route path=\"/exercise/new\">\n          <AddExercise  \n            handlePost={handlePost}\n            exercises={exercises}\n            />\n        </Route>\n        <Route path=\"/exercise\">\n          <ExerciseList\n            exercises={displayedExercises}\n            onAddExercise={handleAddExercise}\n            />\n        </Route>\n      </Switch>\n    </main>\n  );\n}\n\nexport default ExercisePage;"]},"metadata":{},"sourceType":"module"}