{"ast":null,"code":"var _jsxFileName = \"/home/elikape760/Development/code/Mod2/flatiron-workout-app/FlatIron-Workout-Builder-Project/src/components/ExercisePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // import { Route, Switch } from 'react-router';\n\nimport AddExercise from \"./AddExercise\";\nimport ExerciseList from \"./ExerciseList\";\nimport MyExercises from \"./MyExercises\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExercisePage() {\n  _s();\n\n  const [exercises, setExercises] = useState([]);\n  const [myExercises, setMyExercises] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:6001/exercises').then(resp => resp.json()).then(data => {\n      setExercises(data);\n    });\n  }, []);\n\n  function handleAddExercise(exerciseToAdd) {\n    const myExerciseList = myExercises.find(exercise => exercise.id === exerciseToAdd.id);\n\n    if (!myExerciseList) {\n      setMyExercises([...myExercises, exerciseToAdd]);\n    }\n  }\n\n  function handleNewExercise(newExercise) {\n    const updatedExerciseArray = [newExercise, ...exercises];\n    setExercises(updatedExerciseArray);\n  }\n\n  function handleRemoveExercise(exerciseToRemove) {\n    setMyExercises(myExercises => myExercises.filter(exercise => exercise.id !== exerciseToRemove.id));\n  }\n\n  const displayedExercises = exercises.filter(exercise => {\n    return exercise.target.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(MyExercises, {\n      myExercises: myExercises,\n      onRemoveExercise: handleRemoveExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AddExercise, {\n      addNewExercise: handleNewExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseList, {\n      onAddExercise: handleAddExercise,\n      exercises: displayedExercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExercisePage, \"BHgH/kKpd5Z45fG+n/uIIO1Kh4A=\");\n\n_c = ExercisePage;\nexport default ExercisePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"sources":["/home/elikape760/Development/code/Mod2/flatiron-workout-app/FlatIron-Workout-Builder-Project/src/components/ExercisePage.js"],"names":["useState","useEffect","AddExercise","ExerciseList","MyExercises","Search","ExercisePage","exercises","setExercises","myExercises","setMyExercises","searchTerm","setSearchTerm","fetch","then","resp","json","data","handleAddExercise","exerciseToAdd","myExerciseList","find","exercise","id","handleNewExercise","newExercise","updatedExerciseArray","handleRemoveExercise","exerciseToRemove","filter","displayedExercises","target","toLowerCase","includes"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAKA,SAASC,YAAT,GAAwB;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AAAET,MAAAA,YAAY,CAACS,IAAD,CAAZ;AACf,KAHH;AAID,GALQ,EAKN,EALM,CAAT;;AAQA,WAASC,iBAAT,CAA2BC,aAA3B,EAA0C;AACxC,UAAMC,cAAc,GAAGX,WAAW,CAACY,IAAZ,CACpBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADvB,CAAvB;;AAGA,QAAI,CAACH,cAAL,EAAqB;AACnBV,MAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBU,aAAjB,CAAD,CAAd;AACD;AACF;;AAED,WAASK,iBAAT,CAA2BC,WAA3B,EAAwC;AACtC,UAAMC,oBAAoB,GAAG,CAAED,WAAF,EAAc,GAAGlB,SAAjB,CAA7B;AACAC,IAAAA,YAAY,CAACkB,oBAAD,CAAZ;AACD;;AAED,WAASC,oBAAT,CAA8BC,gBAA9B,EAAgD;AAC9ClB,IAAAA,cAAc,CAAED,WAAD,IACbA,WAAW,CAACoB,MAAZ,CAAoBP,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBK,gBAAgB,CAACL,EAAlE,CADY,CAAd;AAGD;;AAED,QAAMO,kBAAkB,GAAGvB,SAAS,CAACsB,MAAV,CAAkBP,QAAD,IAAc;AACxD,WAAOA,QAAQ,CAACS,MAAT,CAAgBC,WAAhB,GAA8BC,QAA9B,CAAuCtB,UAAU,CAACqB,WAAX,EAAvC,CAAP;AACD,GAF0B,CAA3B;AAOA,sBACE;AAAA,4BAGK,QAAC,WAAD;AACC,MAAA,WAAW,EAAEvB,WADd;AAEC,MAAA,gBAAgB,EAAEkB;AAFnB;AAAA;AAAA;AAAA;AAAA,YAHL,eAQM,QAAC,MAAD;AACE,MAAA,UAAU,EAAEhB,UADd;AAEE,MAAA,aAAa,EAAEC;AAFjB;AAAA;AAAA;AAAA;AAAA,YARN,eAaM,QAAC,WAAD;AACE,MAAA,cAAc,EAAEY;AADlB;AAAA;AAAA;AAAA;AAAA,YAbN,eAkBM,QAAC,YAAD;AACE,MAAA,aAAa,EAAEN,iBADjB;AAEE,MAAA,SAAS,EAAEY;AAFb;AAAA;AAAA;AAAA;AAAA,YAlBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAtEQxB,Y;;KAAAA,Y;AAwET,eAAeA,YAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n// import { Route, Switch } from 'react-router';\n\nimport AddExercise from \"./AddExercise\"\nimport ExerciseList from \"./ExerciseList\";\nimport MyExercises from \"./MyExercises\";\nimport Search from \"./Search\";\n\n\n\n\nfunction ExercisePage() {\n\n  const [exercises, setExercises] = useState([])\n  const [myExercises, setMyExercises] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\");\n \n\n\n  useEffect(() => {\n    fetch('http://localhost:6001/exercises')\n      .then(resp => resp.json())\n      .then(data => { setExercises(data);\n      });\n  }, [])\n\n\n  function handleAddExercise(exerciseToAdd) {\n    const myExerciseList = myExercises.find(\n      (exercise) => exercise.id === exerciseToAdd.id\n    );\n    if (!myExerciseList) {\n      setMyExercises([...myExercises, exerciseToAdd]);\n    }\n  }\n\n  function handleNewExercise(newExercise) {\n    const updatedExerciseArray = [ newExercise,...exercises];\n    setExercises(updatedExerciseArray);\n  }\n\n  function handleRemoveExercise(exerciseToRemove) {\n    setMyExercises((myExercises) =>\n      myExercises.filter((exercise) => exercise.id !== exerciseToRemove.id)\n    );\n  }\n\n  const displayedExercises = exercises.filter((exercise) => {\n    return exercise.target.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n \n\n\n  return (\n    <main>\n      {/* <Switch> */}\n        {/* <Route path=\"/exercise/new/search/my-list\"> */}\n         <MyExercises\n          myExercises={myExercises}\n          onRemoveExercise={handleRemoveExercise} />\n          {/* </Route> */}\n        {/* <Route path=\"/exercise/new/search\"> */}\n          <Search\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm} />\n        {/* </Route> */}\n        {/* <Route path=\"/exercise/new\"> */}\n          <AddExercise  \n            addNewExercise={handleNewExercise}\n            />\n        {/* </Route> */}\n        {/* <Route path=\"/exercise\"> */}\n          <ExerciseList\n            onAddExercise={handleAddExercise}\n            exercises={displayedExercises}\n          />\n        {/* </Route> */}\n      {/* </Switch> */}\n    </main>\n  );\n}\n\nexport default ExercisePage;"]},"metadata":{},"sourceType":"module"}