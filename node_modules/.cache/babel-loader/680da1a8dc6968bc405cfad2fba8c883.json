{"ast":null,"code":"var _jsxFileName = \"/home/michael/Documents/Development/code/phase2/project/FlatIron-Workout-Builder-Project/src/components/ExercisePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Route, Switch } from 'react-router';\nimport AddExercise from \"./AddExercise\";\nimport ExerciseList from \"./ExerciseList\";\nimport MyExercises from \"./MyExercises\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExercisePage() {\n  _s();\n\n  const [exercises, setExercises] = useState([]);\n  const [myExercises, setMyExercises] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:6001/exercises').then(resp => resp.json()).then(data => {\n      setExercises(data);\n    });\n  }, []);\n\n  function handleAddExercise(exerciseToAdd) {\n    const myExerciseList = myExercises.find(exercise => exercise.id === exerciseToAdd.id);\n\n    if (!myExerciseList) {\n      setMyExercises([...myExercises, exerciseToAdd]);\n    }\n  }\n\n  function handleNewExercise(newExercise) {\n    const updatedExerciseArray = [newExercise, ...exercises];\n    setExercises(updatedExerciseArray);\n  }\n\n  function handleRemoveExercise(exerciseToRemove) {\n    setMyExercises(myExercises => myExercises.filter(exercise => exercise.id !== exerciseToRemove.id));\n  }\n\n  const displayedExercises = exercises.filter(exercise => {\n    return exercise.target.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"main\",\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/exercise/new/my-list\",\n        children: /*#__PURE__*/_jsxDEV(MyExercises, {\n          myExercises: myExercises,\n          onRemoveExercise: handleRemoveExercise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/exercise/new\",\n        children: /*#__PURE__*/_jsxDEV(AddExercise, {\n          addNewExercise: handleNewExercise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/exercise\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          searchTerm: searchTerm,\n          setSearchTerm: setSearchTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExerciseList, {\n          onAddExercise: handleAddExercise,\n          exercises: displayedExercises\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExercisePage, \"BHgH/kKpd5Z45fG+n/uIIO1Kh4A=\");\n\n_c = ExercisePage;\nexport default ExercisePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"sources":["/home/michael/Documents/Development/code/phase2/project/FlatIron-Workout-Builder-Project/src/components/ExercisePage.js"],"names":["useState","useEffect","Route","Switch","AddExercise","ExerciseList","MyExercises","Search","ExercisePage","exercises","setExercises","myExercises","setMyExercises","searchTerm","setSearchTerm","fetch","then","resp","json","data","handleAddExercise","exerciseToAdd","myExerciseList","find","exercise","id","handleNewExercise","newExercise","updatedExerciseArray","handleRemoveExercise","exerciseToRemove","filter","displayedExercises","target","toLowerCase","includes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Route, Switch } from 'react-router';\n\nimport AddExercise from \"./AddExercise\"\nimport ExerciseList from \"./ExerciseList\";\nimport MyExercises from \"./MyExercises\";\nimport Search from \"./Search\";\n\n\n\n\nfunction ExercisePage() {\n\n  const [exercises, setExercises] = useState([])\n  const [myExercises, setMyExercises] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n\n\n  useEffect(() => {\n    fetch('http://localhost:6001/exercises')\n      .then(resp => resp.json())\n      .then(data => {\n        setExercises(data);\n      });\n  }, [])\n\n\n  function handleAddExercise(exerciseToAdd) {\n    const myExerciseList = myExercises.find(\n      (exercise) => exercise.id === exerciseToAdd.id\n    );\n    if (!myExerciseList) {\n      setMyExercises([...myExercises, exerciseToAdd]);\n    }\n  }\n\n  function handleNewExercise(newExercise) {\n    const updatedExerciseArray = [newExercise, ...exercises];\n    setExercises(updatedExerciseArray);\n  }\n\n  function handleRemoveExercise(exerciseToRemove) {\n    setMyExercises((myExercises) =>\n      myExercises.filter((exercise) => exercise.id !== exerciseToRemove.id)\n    );\n  }\n\n  const displayedExercises = exercises.filter((exercise) => {\n    return exercise.target.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n\n\n\n  return (\n    <main id=\"main\">\n      <Switch>\n        <Route path=\"/exercise/new/my-list\">\n          <MyExercises\n            myExercises={myExercises}\n            onRemoveExercise={handleRemoveExercise} />\n        </Route>\n\n        <Route path=\"/exercise/new\">\n          <AddExercise\n            addNewExercise={handleNewExercise}\n          />\n        </Route>\n        <Route path=\"/exercise\">\n          <Search\n            searchTerm={searchTerm}\n            setSearchTerm={setSearchTerm} />\n          <ExerciseList\n            onAddExercise={handleAddExercise}\n            exercises={displayedExercises} />\n        </Route>\n      </Switch>\n    </main>\n  );\n}\n\nexport default ExercisePage;"]},"metadata":{},"sourceType":"module"}